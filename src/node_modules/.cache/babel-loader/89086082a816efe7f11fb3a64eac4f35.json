{"ast":null,"code":"var _jsxFileName = \"/Users/cera/Desktop/my-app/src/index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { useState } from 'react';\n\nrequire('dotenv').config(); // const Forecast = () => {\n//   let [fetchForecastData, forecastData] = useState({});\n//   function getForecast ()\n//   {\n//       fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?id=2172797&units=%2522metric%2522%20or%20%2522imperial%2522&mode=xml%252C%20html&q=Seattle\", {\n//           \"method\": \"GET\",\n//           \"headers\": {\n//             \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n//             \"x-rapidapi-key\": process.env.REACT_APP_API_KEY\n//           }\n//         })\n//         .then(response => response.JSON())\n//         .then (response => {\n//           fetchForecastData(forecastData)\n//         })\n//         .catch(err => {\n//           console.log(err)})\n//   }\n//   return (\n//       <div>\n//       <h1>Check the Weather:</h1>\n//       <div>\n//           {JSON.stringify(forecastData)}\n//       </div>\n//       <button onClick={getForecast}> Get Forecast</button>\n//       </div>\n//   )\n// }\n\n\nclass Weather extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      error: null,\n      data: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?id=2172797&units=%2522metric%2522%20or%20%2522imperial%2522&mode=xml%252C%20html&q=Seattle\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY\n      }\n    }).then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nrender( /*#__PURE__*/React.createElement(Weather, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/cera/Desktop/my-app/src/index.js"],"names":["React","render","useState","require","config","Weather","Component","state","loading","error","data","componentDidMount","setState","fetch","process","env","REACT_APP_API_KEY","then","response","console","log","catch","err","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,IAAI,EAAE;AAHA,KAD4B;AAAA;;AAQpCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAACJ,MAAAA,OAAO,EAAE;AAAV,KAAd;AACAK,IAAAA,KAAK,CAAC,sJAAD,EAAyJ;AAC5J,gBAAU,KADkJ;AAE5J,iBAAW;AACT,2BAAmB,2CADV;AAET,0BAAkBC,OAAO,CAACC,GAAR,CAAYC;AAFrB;AAFiJ,KAAzJ,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KATD,EAUCG,KAVD,CAUOC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAZD;AAaH;;AAGCrB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD;;AAhCmC;;AAmCtCA,MAAM,eACJ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADI,EAEJsB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFI,CAAN","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { useState } from 'react';\n\nrequire('dotenv').config();\n\n// const Forecast = () => {\n  \n//   let [fetchForecastData, forecastData] = useState({});\n\n//   function getForecast ()\n//   {\n//       fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?id=2172797&units=%2522metric%2522%20or%20%2522imperial%2522&mode=xml%252C%20html&q=Seattle\", {\n//           \"method\": \"GET\",\n//           \"headers\": {\n//             \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n//             \"x-rapidapi-key\": process.env.REACT_APP_API_KEY\n//           }\n//         })\n//         .then(response => response.JSON())\n//         .then (response => {\n//           fetchForecastData(forecastData)\n//         })\n//         .catch(err => {\n//           console.log(err)})\n//   }\n\n//   return (\n//       <div>\n//       <h1>Check the Weather:</h1>\n//       <div>\n//           {JSON.stringify(forecastData)}\n//       </div>\n//       <button onClick={getForecast}> Get Forecast</button>\n//       </div>\n//   )\n// }\n\n\nclass Weather extends React.Component {\n  state = {\n    loading: false,\n    error: null,\n    data: \"\"\n  }\n  \n  \n  componentDidMount() {\n    this.setState({loading: true})\n    fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?id=2172797&units=%2522metric%2522%20or%20%2522imperial%2522&mode=xml%252C%20html&q=Seattle\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY\n      }\n    })\n    .then(response => {\n      console.log(response);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\n\n  render(){\n    return (\n      <div>\n        {/* <Forecast /> */}\n      </div>\n    )\n  }\n}\n\nrender(\n  <Weather />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}