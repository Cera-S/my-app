{"ast":null,"code":"var _jsxFileName = \"/Users/cera/Desktop/weather/src/components/Forecast.js\";\nimport React from 'react';\nimport { useState } from 'react';\n\nrequire('dotenv').config();\n\nexport const Forecast = () => {\n  let [responseObj, setResponseObj] = useState({});\n\n  function getForecast() {\n    fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?id=2172797&units=%2522metric%2522%20or%20%2522imperial%2522&mode=xml%252C%20html&q=Seattle\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"941437a251msh4d3cd78fe48d1d5p193e74jsndd5b311cc353\"\n      }\n    }).then(response => response.json()).then(response => {\n      setResponseObj(response);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Check the Weather:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, JSON.stringify(responseObj)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getForecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \" Get Forecast\"));\n};\nexport default Forecast;","map":{"version":3,"sources":["/Users/cera/Desktop/weather/src/components/Forecast.js"],"names":["React","useState","require","config","Forecast","responseObj","setResponseObj","getForecast","fetch","then","response","json","catch","err","console","log","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAE1B,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA5C;;AAEA,WAASM,WAAT,GACA;AACIC,IAAAA,KAAK,CAAC,sJAAD,EAAyJ;AAC1J,gBAAU,KADgJ;AAE1J,iBAAW;AACT,2BAAmB,2CADV;AAET,0BAAiB;AAFR;AAF+I,KAAzJ,CAAL,CAOGC,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQSC,QAAQ,IAAI;AACjBJ,MAAAA,cAAc,CAACI,QAAD,CAAd;AACD,KAVH,EAWGE,KAXH,CAWSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAZrB;AAaH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,IAAI,CAACC,SAAL,CAAeZ,WAAf,CADL,CAFA,eAKA;AAAQ,IAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALA,CADJ;AASD,CA9BI;AAgCL,eAAeH,QAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nrequire('dotenv').config();\n\nexport const Forecast = () => {\n  \n    let [responseObj, setResponseObj] = useState({});\n  \n    function getForecast ()\n    {\n        fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?id=2172797&units=%2522metric%2522%20or%20%2522imperial%2522&mode=xml%252C%20html&q=Seattle\", {\n            \"method\": \"GET\",\n            \"headers\": {\n              \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n              \"x-rapidapi-key\":\"941437a251msh4d3cd78fe48d1d5p193e74jsndd5b311cc353\"\n            }\n          })\n          .then(response => response.json())\n          .then (response => {\n            setResponseObj(response)\n          })\n          .catch(err => {\n            console.log(err)})\n    }\n  \n    return (\n        <div>\n        <h1>Check the Weather:</h1>\n        <div>\n            {JSON.stringify(responseObj)}\n        </div>\n        <button onClick={getForecast}> Get Forecast</button>\n        </div>\n    )\n  }\n\n  export default Forecast;"]},"metadata":{},"sourceType":"module"}