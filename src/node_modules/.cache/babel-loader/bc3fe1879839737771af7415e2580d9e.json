{"ast":null,"code":"var _jsxFileName = \"/Users/cera/Desktop/weather/src/components/Forecast.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport Data from './Data';\nimport './Forecast.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Conditions from './Conditions';\n\nrequire('dotenv').config();\n\nexport const Forecast = () => {\n  let [responseObj, setResponseObj] = useState({});\n  let [cityName, setCityName] = useState('');\n\n  function getForecast(e) {\n    e.preventDefault();\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${process.env.REACT_APP_API_KEY}&units=imperial`).then(response => response.json()).then(response => {\n      setResponseObj(response);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getForecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    value: cityName,\n    onChange: e => setCityName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Data, {\n    responseObj: responseObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Conditions, {\n    props: responseObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })));\n};\nexport default Forecast;","map":{"version":3,"sources":["/Users/cera/Desktop/weather/src/components/Forecast.js"],"names":["React","useState","Data","SearchIcon","Conditions","require","config","Forecast","responseObj","setResponseObj","cityName","setCityName","getForecast","e","preventDefault","fetch","process","env","REACT_APP_API_KEY","then","response","json","catch","err","console","log","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAE1B,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAI,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASW,WAAT,CAAqBC,CAArB,EACA;AACEA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,KAAK,CAAE,oDAAmDL,QAAS,UAASM,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBAArG,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAESC,QAAQ,IAAI;AACjBX,MAAAA,cAAc,CAACW,QAAD,CAAd;AACD,KAJH,EAKGE,KALH,CAKSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KANrB;AAOD;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEX,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,QAFhB;AAGI,IAAA,KAAK,EAAEF,QAHX;AAII,IAAA,QAAQ,EAAGG,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACa,MAAF,CAASC,KAAV,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,eAUE,oBAAC,IAAD;AAAM,IAAA,WAAW,EAAEnB,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,CADJ;AAiBD,CAnCI;AAqCL,eAAeD,QAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport Data from './Data';\nimport './Forecast.css'\nimport SearchIcon from '@material-ui/icons/Search';\nimport Conditions from './Conditions';\n\nrequire('dotenv').config();\n\nexport const Forecast = () => {\n  \n    let [responseObj, setResponseObj] = useState({});\n    let [cityName, setCityName] = useState('');\n  \n    function getForecast(e)\n    {\n      e.preventDefault();\n\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${process.env.REACT_APP_API_KEY}&units=imperial`)\n        .then(response => response.json())\n        .then (response => {\n          setResponseObj(response)\n        })\n        .catch(err => {\n          console.log(err)})\n    }\n  \n    return (\n        <div className=\"input-box\">\n          <form onSubmit={getForecast}>\n            <input\n                type=\"text\"\n                placeholder=\"Search\"\n                value={cityName}\n                onChange={(e) => setCityName(e.target.value)}\n            />\n            <button type=\"submit\">\n              <SearchIcon />\n            </button>\n            <Data responseObj={responseObj}/>\n            <Conditions props={responseObj} />\n          </form>\n        </div>\n    )\n  }\n\n  export default Forecast;"]},"metadata":{},"sourceType":"module"}