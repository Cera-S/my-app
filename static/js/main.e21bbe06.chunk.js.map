{"version":3,"sources":["components/WarmTemp.js","components/ColdTemp.js","components/Mapbox.js","components/Data.js","components/Forecast.js","components/Weather.js","App.js","index.js"],"names":["WarmTemp","state","warmTemp","loading","data","this","setState","Component","require","config","mapboxgl","accessToken","Mapbox","props","useState","width","height","latitude","responseObj","lat","longitude","lon","zoom","viewport","setViewPort","className","mapboxApiAccessToken","process","mapStyle","onViewportChange","Data","cod","name","Math","round","main","temp","src","weather","icon","alt","description","Forecast","setResponseObj","cityName","setCityName","onSubmit","e","preventDefault","fetch","then","response","json","catch","err","console","log","type","placeholder","value","onChange","target","Weather","loaded","React","App","render","document","getElementById"],"mappings":"mUAyBeA,G,wNArBXC,MAAQ,CACJC,SAAU,KACVC,SAAS,EACTC,KAAM,I,kEAINC,KAAKC,SAAS,CAACH,SAAS,M,+BAKxB,OACI,6BACI,sD,GAfOI,cCAvBC,EAAQ,IAAUC,SAEKF,Y,yCCEvBG,IAASC,YAAc,yBAErB,IAwBeC,EAxBA,SAACC,GAAW,IAAD,EACUC,mBAAS,CACzCC,MAAO,OACPC,OAAQ,OACRC,SAAUJ,EAAMK,YAAYC,IAC5BC,UAAWP,EAAMK,YAAYG,IAC7BC,KAAM,KANgB,mBAChBC,EADgB,KACNC,EADM,KASxB,OACE,yBAAKC,UAAU,UACb,kBAAC,IAAD,iBACMF,EADN,CAEEG,qBAAsBC,6FACtBC,SAAS,qDACTC,iBAAkB,SAACN,GACfC,EAAYD,SCiBXO,EApCF,SAACjB,GAAW,IAAD,EACAC,mBAAS,IAAxBI,EADe,oBAGpB,OACI,6BAC+B,MAA1BL,EAAMK,YAAYa,IACnB,yBAAKN,UAAU,eACP,kCAAQZ,EAAMK,YAAYc,KAA1B,qBAAkDC,KAAKC,MAAMrB,EAAMK,YAAYiB,KAAKC,MAApF,UACA,yBAAKX,UAAU,WACX,2BAAG,yBAAKY,IAAG,2CAAsCxB,EAAMK,YAAYoB,QAAQ,GAAGC,KAAnE,QACPC,IAAI,0CACR,2BAAI3B,EAAMK,YAAYoB,QAAQ,GAAGG,cAGzC,yBAAKhB,UAAU,cACVZ,EAAMK,YAAYiB,KAAKC,MAAQ,GAC5B,2BACI,kBAAC,EAAD,OAGJ,kDAMR,yBAAKX,UAAU,OACX,kBAAC,EAAD,CAAQP,YAAaA,EAAaC,IAAKN,EAAMK,YAAYC,IAAKE,IAAKR,EAAMK,YAAYG,QAI3F,O,yBC/Bdb,EAAQ,IAAUC,SAEX,IAoCUiC,EApCO,WAAO,IAAD,EAEU5B,mBAAS,IAFnB,mBAErBI,EAFqB,KAERyB,EAFQ,OAGI7B,mBAAS,IAHb,mBAGrB8B,EAHqB,KAGXC,EAHW,KAkB1B,OACI,yBAAKpB,UAAU,aACb,0BAAMqB,SAfZ,SAAqBC,GAEnBA,EAAEC,iBAEFC,MAAM,qDAAD,OAAsDL,EAAtD,kBAAwEjB,mCAAxE,oBACFuB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAM,SAAAC,GACLR,EAAeQ,MAEhBE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAMV,2BACIG,KAAK,OACLC,YAAY,SACZC,MAAOf,EACPgB,SAAU,SAACb,GAAD,OAAOF,EAAYE,EAAEc,OAAOF,UAE1C,4BAAQF,KAAK,UACX,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAMvC,YAAaA,OCnC/BV,EAAQ,IAAUC,S,IAqBDqD,E,4MAlBb7D,MAAQ,CACN8D,QAAQ,G,kEAIR1D,KAAKC,SAAS,CAACyD,QAAQ,M,+BAKvB,OACE,6BACE,kBAAC,EAAD,W,GAbYC,IAAMzD,WCD5BC,EAAQ,IAAUC,SAcHwD,MAXf,WACE,OACE,8BACE,yBAAKxC,UAAU,OACb,+CACA,kBAAC,EAAD,SCRRjB,EAAQ,IAAUC,SAElByD,iBACE,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.e21bbe06.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Temp.css'\n\nclass WarmTemp extends Component {\n    state = {\n        warmTemp: null,\n        loading: false,\n        data: [],\n    }\n\n    componentDidMount() {\n        this.setState({loading: true})\n    }\n\n\n    render () {\n        return (\n            <div>\n                <p>It's warm outside.</p>\n            </div>\n        )\n    }\n\n}\n\nexport default WarmTemp;","import React, {Component} from 'react';\nimport './Temp.css'\n\nrequire('dotenv').config();\n\nclass ColdTemp extends Component {\n    state = {\n        warmTemp: null,\n        loading: false,\n        data: [],\n    }\n\n    componentDidMount() {\n        this.setState({loading: true})\n    }\n\n\n    render () {\n        const isBackgroundNormal = true;\n\n        return (\n            <div className= {isBackgroundNormal ? 'background-normal' : 'background-cold'}>\n                <div className=\"loading-data\">\n                    {this.state.loading \n                    ? <p>.</p>\n                    : <div>\n                    </div> }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default ColdTemp;\n\n","import React, { useState } from 'react'\nimport mapboxgl from 'mapbox-gl';\nimport MapGL from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport './Mapbox.css'\n\n\nmapboxgl.accessToken = 'REACT_APP_MAPBOX_TOKEN';\n  \n  const Mapbox = (props) => {    \n    const [ viewport, setViewPort ] = useState({\n      width: \"100%\",\n      height: \"60vh\",\n      latitude: props.responseObj.lat,\n      longitude: props.responseObj.lon,\n      zoom: 10\n    });\n\n    return (\n      <div className=\"center\">\n        <MapGL\n          {...viewport} // pass to component\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n          mapStyle=\"mapbox://styles/cerasams/ckbinh6se08yd1iqj9j4m8o8w\"\n          onViewportChange={(viewport) => {\n              setViewPort(viewport);\n          }}\n        >\n        </MapGL>\n      </div>\n    )\n  }\n  \n  export default Mapbox","import React, {useState} from 'react';\nimport './Data.css';\nimport WarmTemp from './WarmTemp';\nimport ColdTemp from './ColdTemp';\nimport Mapbox from './Mapbox';\n\nconst Data = (props) => {\n    let [responseObj] = useState({});\n\n    return (\n        <div>\n            {props.responseObj.cod === 200 ?\n            <div className=\"temperature\">\n                    <p> In {props.responseObj.name}, it is currently {Math.round(props.responseObj.main.temp)}Â°F.</p>\n                    <div className=\"weather\">\n                        <p><img src={`https://openweathermap.org/img/w/${props.responseObj.weather[0].icon}.png`}\n                            alt=\"{props.response.Obj.weather[0].icon}\"/></p>\n                        <p>{props.responseObj.weather[0].description}</p>\n                    </div>\n\n                <div className=\"conditions\">\n                    {props.responseObj.main.temp >= 70 ? \n                        <p>\n                            <WarmTemp />\n                        </p>\n                    :\n                        <p>It's cold outside. \n                            {/* <ColdTemp /> */}\n                        </p>\n                    }\n                </div>\n\n                <div className=\"map\">\n                    <Mapbox responseObj={responseObj} lat={props.responseObj.lat} lon={props.responseObj.lon} />\n                </div>\n\n            </div>\n            : null}\n        </div>\n    )\n}\n\nexport default Data;","import React from 'react';\nimport { useState } from 'react';\nimport Data from './Data';\nimport './Forecast.css'\nimport SearchIcon from '@material-ui/icons/Search';\n\nrequire('dotenv').config();\n\nexport const Forecast = () => {\n  \n    let [responseObj, setResponseObj] = useState({});\n    let [cityName, setCityName] = useState('');\n  \n    function getForecast(e)\n    {\n      e.preventDefault();\n\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${process.env.REACT_APP_API_KEY}&units=imperial`)\n        .then(response => response.json())\n        .then (response => {\n          setResponseObj(response)\n        })\n        .catch(err => {\n          console.log(err)})\n    }\n  \n    return (\n        <div className=\"input-box\">\n          <form onSubmit={getForecast}>\n            <input\n                type=\"text\"\n                placeholder=\"Search\"\n                value={cityName}\n                onChange={(e) => setCityName(e.target.value)}\n            />\n            <button type=\"submit\">\n              <SearchIcon />\n            </button>\n            <Data responseObj={responseObj}/>\n          </form>\n        </div>\n    )\n  }\n\n  export default Forecast;","import React from 'react';\nimport Forecast from './Forecast';\n\nrequire('dotenv').config();\n\nclass Weather extends React.Component {\n    state = {\n      loaded: false,\n    }\n    \n    componentDidMount() {\n      this.setState({loaded: true})\n    }\n  \n  \n    render(){\n      return (\n        <div>\n          <Forecast />\n        </div>\n      )\n    }\n  }\n\n  export default Weather;","import React from 'react';\nimport './App.css';\nimport Weather from './components/Weather';\n\nrequire('dotenv').config();\n\n\nfunction App() {\n  return (\n    <body>\n      <div className=\"App\">\n        <h1>Enter your city</h1>\n        <Weather />\n        </div>\n    </body>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrequire('dotenv').config();\n\nrender(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}