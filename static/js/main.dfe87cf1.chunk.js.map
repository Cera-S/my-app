{"version":3,"sources":["components/WarmTemp.js","components/ColdTemp.js","components/Data.js","components/Forecast.js","components/Weather.js","App.js","index.js"],"names":["WarmTemp","state","warmTemp","loading","data","this","setState","className","Component","require","config","ColdTemp","Data","props","responseObj","cod","name","Math","round","main","temp","src","weather","icon","alt","description","Forecast","useState","setResponseObj","cityName","setCityName","onSubmit","e","preventDefault","fetch","process","REACT_APP_API_KEY","then","response","json","catch","err","console","log","type","placeholder","value","onChange","target","Weather","loaded","React","App","render","document","getElementById"],"mappings":"ySA+BeA,G,wNA3BXC,MAAQ,CACJC,SAAU,KACVC,SAAS,EACTC,KAAM,I,kEAINC,KAAKC,SAAS,CAACH,SAAS,M,+BAMxB,OACI,yBAAKI,UAAgC,kBACjC,yBAAKA,UAAU,gBACVF,KAAKJ,MAAME,QACV,gCACA,oC,GAnBCK,cCAvBC,EAAQ,GAAUC,S,IA+BHC,E,4MA5BXV,MAAQ,CACJC,SAAU,KACVC,SAAS,EACTC,KAAM,I,kEAINC,KAAKC,SAAS,CAACH,SAAS,M,+BAOxB,OACI,yBAAKI,UAAiC,qBAClC,yBAAKA,UAAU,gBACVF,KAAKJ,MAAME,QACV,gCACA,oC,GApBCK,aC6BRI,EA7BF,SAACC,GACV,OACI,6BAC+B,MAA1BA,EAAMC,YAAYC,IACnB,yBAAKR,UAAU,eACP,kCAAQM,EAAMC,YAAYE,KAA1B,qBAAkDC,KAAKC,MAAML,EAAMC,YAAYK,KAAKC,MAApF,UACA,yBAAKb,UAAU,WACX,2BAAG,yBAAKc,IAAG,2CAAsCR,EAAMC,YAAYQ,QAAQ,GAAGC,KAAnE,QACPC,IAAI,0CACR,2BAAIX,EAAMC,YAAYQ,QAAQ,GAAGG,cAGzC,yBAAKlB,UAAU,cACVM,EAAMC,YAAYK,KAAKC,MAAQ,GAC5B,gDACI,kBAAC,EAAD,OAGJ,gDACI,kBAAC,EAAD,SAKd,O,yBCvBdX,EAAQ,GAAUC,SAEX,IAoCUgB,EApCO,WAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAErBb,EAFqB,KAERc,EAFQ,OAGID,mBAAS,IAHb,mBAGrBE,EAHqB,KAGXC,EAHW,KAkB1B,OACI,yBAAKvB,UAAU,aACb,0BAAMwB,SAfZ,SAAqBC,GAEnBA,EAAEC,iBAEFC,MAAM,qDAAD,OAAsDL,EAAtD,kBAAwEM,2HAAYC,kBAApF,oBACFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAM,SAAAC,GACLV,EAAeU,MAEhBE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAMV,2BACIG,KAAK,OACLC,YAAY,SACZC,MAAOjB,EACPkB,SAAU,SAACf,GAAD,OAAOF,EAAYE,EAAEgB,OAAOF,UAE1C,4BAAQF,KAAK,UACX,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAM9B,YAAaA,OCnC/BL,EAAQ,GAAUC,S,IAqBDuC,E,4MAlBbhD,MAAQ,CACNiD,QAAQ,G,kEAIR7C,KAAKC,SAAS,CAAC4C,QAAQ,M,+BAKvB,OACE,6BACE,kBAAC,EAAD,W,GAbYC,IAAM3C,WCD5BC,EAAQ,GAAUC,SAcH0C,MAXf,WACE,OACE,8BACE,yBAAK7C,UAAU,OACb,+CACA,kBAAC,EAAD,SCRRE,EAAQ,GAAUC,SAElB2C,iBACE,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.dfe87cf1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Temp.css'\n\nclass WarmTemp extends Component {\n    state = {\n        warmTemp: null,\n        loading: false,\n        data: [],\n    }\n\n    componentDidMount() {\n        this.setState({loading: true})\n    }\n\n\n    render () {\n        const isBackgroundNormal = true;\n        return (\n            <div className={isBackgroundNormal ? 'background-hot' : null}>\n                <div className=\"loading-data\">\n                    {this.state.loading \n                    ? <p>.</p>\n                    : <div>\n                    </div> }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default WarmTemp;","import React, {Component} from 'react';\nimport './Temp.css'\n\nrequire('dotenv').config();\n\nclass ColdTemp extends Component {\n    state = {\n        warmTemp: null,\n        loading: false,\n        data: [],\n    }\n\n    componentDidMount() {\n        this.setState({loading: true})\n    }\n\n\n    render () {\n        const isBackgroundNormal = true;\n\n        return (\n            <div className= {isBackgroundNormal ? 'background-normal' : 'background-cold'}>\n                <div className=\"loading-data\">\n                    {this.state.loading \n                    ? <p>.</p>\n                    : <div>\n                    </div> }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default ColdTemp;\n\n","import React from 'react';\nimport './Data.css';\nimport WarmTemp from './WarmTemp';\nimport ColdTemp from './ColdTemp';\n\nconst Data = (props) => {\n    return (\n        <div>\n            {props.responseObj.cod === 200 ?\n            <div className=\"temperature\">\n                    <p> In {props.responseObj.name}, it is currently {Math.round(props.responseObj.main.temp)}Â°F.</p>\n                    <div className=\"weather\">\n                        <p><img src={`https://openweathermap.org/img/w/${props.responseObj.weather[0].icon}.png`}\n                            alt=\"{props.response.Obj.weather[0].icon}\"/></p>\n                        <p>{props.responseObj.weather[0].description}</p>\n                    </div>\n\n                <div className=\"conditions\">\n                    {props.responseObj.main.temp >= 70 ? \n                        <p>It's warm outside.\n                            <WarmTemp />\n                        </p>\n                    :\n                        <p>It's cold outside. \n                            <ColdTemp />\n                        </p>\n                    }\n                </div>\n            </div>\n            : null}\n        </div>\n    )\n}\n\nexport default Data;","import React from 'react';\nimport { useState } from 'react';\nimport Data from './Data';\nimport './Forecast.css'\nimport SearchIcon from '@material-ui/icons/Search';\n\nrequire('dotenv').config();\n\nexport const Forecast = () => {\n  \n    let [responseObj, setResponseObj] = useState({});\n    let [cityName, setCityName] = useState('');\n  \n    function getForecast(e)\n    {\n      e.preventDefault();\n\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${process.env.REACT_APP_API_KEY}&units=imperial`)\n        .then(response => response.json())\n        .then (response => {\n          setResponseObj(response)\n        })\n        .catch(err => {\n          console.log(err)})\n    }\n  \n    return (\n        <div className=\"input-box\">\n          <form onSubmit={getForecast}>\n            <input\n                type=\"text\"\n                placeholder=\"Search\"\n                value={cityName}\n                onChange={(e) => setCityName(e.target.value)}\n            />\n            <button type=\"submit\">\n              <SearchIcon />\n            </button>\n            <Data responseObj={responseObj}/>\n          </form>\n        </div>\n    )\n  }\n\n  export default Forecast;","import React from 'react';\nimport Forecast from './Forecast';\n\nrequire('dotenv').config();\n\nclass Weather extends React.Component {\n    state = {\n      loaded: false,\n    }\n    \n    componentDidMount() {\n      this.setState({loaded: true})\n    }\n  \n  \n    render(){\n      return (\n        <div>\n          <Forecast />\n        </div>\n      )\n    }\n  }\n\n  export default Weather;","import React from 'react';\nimport './App.css';\nimport Weather from './components/Weather';\n\nrequire('dotenv').config();\n\n\nfunction App() {\n  return (\n    <body>\n      <div className=\"App\">\n        <h1>Enter your city</h1>\n        <Weather />\n      </div>\n    </body>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrequire('dotenv').config();\n\nrender(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}