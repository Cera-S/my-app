{"version":3,"sources":["components/WarmTemp.js","components/ColdTemp.js","components/Mapbox.js","components/Data.js","components/Yelp.js","components/Forecast.js","components/Weather.js","App.js","index.js"],"names":["WarmTemp","state","warmTemp","loading","data","this","setState","className","Component","require","config","ColdTemp","mapboxgl","accessToken","Mapbox","props","useState","width","height","latitude","responseObj","lat","longitude","lon","zoom","viewport","setViewPort","mapboxApiAccessToken","process","mapStyle","onViewportChange","Data","cod","name","Math","round","main","temp","src","weather","icon","alt","description","Yelp","searchResults","axios","get","cityName","headers","Authorization","params","categories","limit","then","response","businesses","map","business","rating","catch","err","console","log","Forecast","setResponseObj","setCityName","onSubmit","e","preventDefault","fetch","json","type","placeholder","value","onChange","target","Weather","loaded","React","App","render","document","getElementById"],"mappings":"uLAyBeA,G,kNAtBXC,MAAQ,CACJC,SAAU,KACVC,SAAS,EACTC,KAAM,I,kEAINC,KAAKC,SAAS,CAACH,SAAS,M,+BAKxB,OACI,yBAAKI,UAAU,QACX,wG,GAfOC,cCAvBC,EAAQ,IAAUC,S,IA+BHC,E,4MA5BXV,MAAQ,CACJC,SAAU,KACVC,SAAS,EACTC,KAAM,I,kEAINC,KAAKC,SAAS,CAACH,SAAS,M,+BAOxB,OACI,yBAAKI,UAAiC,qBAClC,yBAAKA,UAAU,gBACVF,KAAKJ,MAAME,QACV,gCACA,oC,GApBCK,a,2CCIvBI,IAASC,YAAc,yBAEvB,IAwBeC,EAxBA,SAACC,GAAW,IAAD,EACUC,mBAAS,CACzCC,MAAO,OACPC,OAAQ,OACRC,SAAUJ,EAAMK,YAAYC,IAC5BC,UAAWP,EAAMK,YAAYG,IAC7BC,KAAM,KANgB,mBAChBC,EADgB,KACNC,EADM,KASxB,OACE,yBAAKnB,UAAU,UACb,kBAAC,IAAD,iBACMkB,EADN,CAEEE,qBAAsBC,6FACtBC,SAAS,qDACTC,iBAAkB,SAACL,GACfC,EAAYD,SCcTM,EAlCF,SAAChB,GACV,OACI,6BAC+B,MAA1BA,EAAMK,YAAYY,IACnB,yBAAKzB,UAAU,eACP,kCAAQQ,EAAMK,YAAYa,KAA1B,qBAAkDC,KAAKC,MAAMpB,EAAMK,YAAYgB,KAAKC,MAApF,UACA,yBAAK9B,UAAU,WACX,2BAAG,yBAAK+B,IAAG,2CAAsCvB,EAAMK,YAAYmB,QAAQ,GAAGC,KAAnE,QACPC,IAAI,0CACR,2BAAI1B,EAAMK,YAAYmB,QAAQ,GAAGG,cAGzC,yBAAKnC,UAAU,cACVQ,EAAMK,YAAYgB,KAAKC,MAAQ,GAC5B,2BACI,kBAAC,EAAD,OAGJ,2BACI,kBAAC,EAAD,QAKZ,yBAAK9B,UAAU,OACX,kBAAC,EAAD,CAAQa,YAAaL,EAAMK,YAAaC,IAAKN,EAAMK,YAAYC,IAAKE,IAAKR,EAAMK,YAAYG,QAIjG,O,yBCMCoB,E,kDApCX,WAAY5B,GAAQ,IAAD,8BACf,cAAMA,IACDd,MAAQ,CACT2C,cAAe,IAHJ,E,gEAQfC,IAAMC,IAAO,uCAAb,6DAAyGzC,KAAK0C,UAAW,CACrHC,QAAS,CACLC,cAAc,UAAD,OAAYrB,qIAE7BsB,OAAQ,CACJC,WAAY,cACZC,MAAO,MAGdC,MAAK,SAAAC,GACFA,EAASlD,KAAKmD,WAAWC,KAAI,SAAAC,GACzB,MAAO,CACHxB,KAAMwB,EAASxB,KACfyB,OAAQD,EAASC,cAI5BC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,+BAId,OACI,yBAAKrD,UAAU,gB,GAhCRC,a,iBCGnBC,EAAQ,IAAUC,SAEX,IAqCUqD,EArCO,WAAO,IAAD,EAEU/C,mBAAS,IAFnB,mBAErBI,EAFqB,KAER4C,EAFQ,OAGIhD,mBAAS,IAHb,mBAGrB+B,EAHqB,KAGXkB,EAHW,KAkB1B,OACI,yBAAK1D,UAAU,aACb,0BAAM2D,SAfZ,SAAqBC,GAEnBA,EAAEC,iBAEFC,MAAM,qDAAD,OAAsDtB,EAAtD,kBAAwEnB,mCAAxE,oBACFyB,MAAK,SAAAC,GAAQ,OAAIA,EAASgB,UAC1BjB,MAAM,SAAAC,GACLU,EAAeV,MAEhBK,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAMV,2BACIW,KAAK,OACLC,YAAY,SACZC,MAAO1B,EACP2B,SAAU,SAACP,GAAD,OAAOF,EAAYE,EAAEQ,OAAOF,UAE1C,4BAAQF,KAAK,UACX,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAMnD,YAAaA,IACnB,kBAAC,EAAD,CAAM2B,SAAUA,OCrC5BtC,EAAQ,IAAUC,S,IAqBDkE,E,4MAlBb3E,MAAQ,CACN4E,QAAQ,G,kEAIRxE,KAAKC,SAAS,CAACuE,QAAQ,M,+BAKvB,OACE,6BACE,kBAAC,EAAD,W,GAbYC,IAAMtE,WCD5BC,EAAQ,IAAUC,SAaHqE,MAXf,WACE,OACE,8BACE,yBAAKxE,UAAU,OACb,+CACA,kBAAC,EAAD,SCPRE,EAAQ,IAAUC,SAElBsE,iBACE,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c0989c01.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass WarmTemp extends Component {\n    state = {\n        warmTemp: null,\n        loading: false,\n        data: [],\n    }\n\n    componentDidMount() {\n        this.setState({loading: true})\n    }\n\n\n    render () {\n        return (\n            <div className=\"warm\">\n                <p>It's warm outside.\n                Would you like recomnendations for outdoor spots?</p>\n            </div>\n        )\n    }\n\n}\n\nexport default WarmTemp;","import React, {Component} from 'react';\n\nrequire('dotenv').config();\n\nclass ColdTemp extends Component {\n    state = {\n        warmTemp: null,\n        loading: false,\n        data: [],\n    }\n\n    componentDidMount() {\n        this.setState({loading: true})\n    }\n\n\n    render () {\n        const isBackgroundNormal = true;\n\n        return (\n            <div className= {isBackgroundNormal ? 'background-normal' : 'background-cold'}>\n                <div className=\"loading-data\">\n                    {this.state.loading \n                    ? <p>.</p>\n                    : <div>\n                    </div> }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default ColdTemp;\n\n","import React,{ useState } from 'react'\nimport mapboxgl from 'mapbox-gl';\nimport MapGL from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport '@mapbox/mapbox-gl-geocoder';\nimport './Mapbox.css';\n\n\nmapboxgl.accessToken = 'REACT_APP_MAPBOX_TOKEN';\n\nconst Mapbox = (props) => {    \n  const [ viewport, setViewPort ] = useState({\n    width: \"100%\",\n    height: \"60vh\",\n    latitude: props.responseObj.lat,\n    longitude: props.responseObj.lon,\n    zoom: 10\n  });\n\n  return (\n    <div className=\"center\">\n      <MapGL\n        {...viewport} // pass to component\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        mapStyle=\"mapbox://styles/cerasams/ckbinh6se08yd1iqj9j4m8o8w\"\n        onViewportChange={(viewport) => {\n            setViewPort(viewport);\n        }}\n      >\n      </MapGL>\n    </div>\n  )\n}\n\nexport default Mapbox;","import React from 'react';\nimport './Data.css';\nimport WarmTemp from './WarmTemp';\nimport ColdTemp from './ColdTemp';\nimport Mapbox from './Mapbox';\n\nconst Data = (props) => {\n    return (\n        <div>\n            {props.responseObj.cod === 200 ?\n            <div className=\"temperature\">\n                    <p> In {props.responseObj.name}, it is currently {Math.round(props.responseObj.main.temp)}Â°F.</p>\n                    <div className=\"weather\">\n                        <p><img src={`https://openweathermap.org/img/w/${props.responseObj.weather[0].icon}.png`}\n                            alt=\"{props.response.Obj.weather[0].icon}\"/></p>\n                        <p>{props.responseObj.weather[0].description}</p>\n                    </div>\n\n                <div className=\"conditions\">\n                    {props.responseObj.main.temp >= 70 ? \n                        <p>\n                            <WarmTemp />\n                        </p>\n                    :\n                        <p>\n                            <ColdTemp />\n                        </p>\n                    }\n                </div>\n\n                <div className=\"map\">\n                    <Mapbox responseObj={props.responseObj} lat={props.responseObj.lat} lon={props.responseObj.lon} />\n                </div>\n\n            </div>\n            : null}\n        </div>\n    )\n}\n\nexport default Data;","import React, { Component } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nclass Yelp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchResults: []\n        };\n    }\n\n    componentDidMount() {\n        axios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search?location=${this.cityName}`,{\n            headers: {\n                Authorization: `Bearer ${process.env.REACT_APP_YELP_KEY}`\n            },\n            params: {\n                categories: 'restaurants',\n                limit: 10\n            }\n        })\n        .then(response => {\n            response.data.businesses.map(business => {\n                return {\n                    name: business.name,\n                    rating: business.rating\n                }\n            })\n        })\n        .catch(err => {\n          console.log(err)})\n    }\n\n    render () {\n        return (\n            <div className=\"results\">\n            </div>\n        )}\n}\n\nexport default Yelp","import React from 'react';\nimport { useState } from 'react';\nimport Data from './Data';\nimport './Forecast.css'\nimport Yelp from './Yelp';\nimport SearchIcon from '@material-ui/icons/Search';\n\nrequire('dotenv').config();\n\nexport const Forecast = () => {\n  \n    let [responseObj, setResponseObj] = useState({});\n    let [cityName, setCityName] = useState('');\n  \n    function getForecast(e)\n    {\n      e.preventDefault();\n\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${process.env.REACT_APP_API_KEY}&units=imperial`)\n        .then(response => response.json())\n        .then (response => {\n          setResponseObj(response)\n        })\n        .catch(err => {\n          console.log(err)})\n    }\n  \n    return (\n        <div className=\"input-box\">\n          <form onSubmit={getForecast}>\n            <input\n                type=\"text\"\n                placeholder=\"Search\"\n                value={cityName}\n                onChange={(e) => setCityName(e.target.value)}\n            />\n            <button type=\"submit\">\n              <SearchIcon />\n            </button>\n            <Data responseObj={responseObj}/>\n            <Yelp cityName={cityName} />\n          </form>\n        </div>\n    )\n  }\n\n  export default Forecast;","import React from 'react';\nimport Forecast from './Forecast';\n\nrequire('dotenv').config();\n\nclass Weather extends React.Component {\n    state = {\n      loaded: false,\n    }\n    \n    componentDidMount() {\n      this.setState({loaded: true})\n    }\n  \n  \n    render(){\n      return (\n        <div>\n          <Forecast />\n        </div>\n      )\n    }\n  }\n\n  export default Weather;","import React from 'react';\nimport './App.css';\nimport Weather from './components/Weather';\n\nrequire('dotenv').config();\n\nfunction App() {\n  return (\n    <body>\n      <div className=\"App\">\n        <h1>Enter your city</h1>\n        <Weather />\n      </div>\n    </body>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrequire('dotenv').config();\n\nrender(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}