{"version":3,"sources":["components/Data.js","components/Forecast.js","components/Weather.js","App.js","index.js"],"names":["fetchedData","props","responseObj","cod","name","main","temp","feels_like","require","config","Forecast","useState","setResponseObj","cityName","setCityName","className","onSubmit","e","preventDefault","fetch","process","then","response","json","catch","err","console","log","type","placeholder","value","onChange","target","Data","Weather","state","loaded","this","setState","React","Component","App","render","document","getElementById"],"mappings":"8PAeeA,EAbK,SAACC,GACjB,OACI,6BAC+B,MAA1BA,EAAMC,YAAYC,IACnB,6BACI,kCAAQF,EAAMC,YAAYE,KAA1B,qBAAkDH,EAAMC,YAAYG,KAAKC,KAAzE,sBACaL,EAAMC,YAAYG,KAAKE,WADpC,UAGF,O,MCLdC,EAAQ,GAAUC,SAEX,IAmCUC,EAnCO,WAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAErBT,EAFqB,KAERU,EAFQ,OAGID,mBAAS,IAHb,mBAGrBE,EAHqB,KAGXC,EAHW,KAiB1B,OACI,yBAAKC,UAAU,aACb,0BAAMC,SAdZ,SAAqBC,GAEnBA,EAAEC,iBACFC,MAAM,oDAAD,OAAqDN,EAArD,kBAAuEO,mCAAvE,oBACFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAM,SAAAC,GACLV,EAAeU,MAEhBE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAMV,2BACEG,KAAK,OACLC,YAAY,MACZC,MAAOjB,EACPkB,SAAU,SAACd,GAAD,OAAOH,EAAYG,EAAEe,OAAOF,UAExC,4BAAQF,KAAK,UAAb,UAGA,kBAACK,EAAD,CAAM/B,YAAaA,OCjC/BM,EAAQ,GAAUC,S,IAqBDyB,E,4MAlBbC,MAAQ,CACNC,QAAQ,G,kEAIRC,KAAKC,SAAS,CAACF,QAAQ,M,+BAKvB,OACE,6BACE,kBAAC,EAAD,W,GAbYG,IAAMC,WCD5BhC,EAAQ,GAAUC,SAcHgC,MAXf,WACE,OACE,yBAAK1B,UAAU,OACd,8BACE,+CACA,kBAAC,EAAD,SCRPP,EAAQ,GAAUC,SAElBiC,iBACE,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.f08fdede.chunk.js","sourcesContent":["import React from 'react';\n\nconst fetchedData = (props) => {\n    return (\n        <div>\n            {props.responseObj.cod === 200 ?\n            <div>\n                <p> In {props.responseObj.name}, it is currently {props.responseObj.main.temp}°F.\n                Feels like: {props.responseObj.main.feels_like}°F</p>\n            </div>\n            : null}\n        </div>\n    )\n}\n\nexport default fetchedData;","import React from 'react';\nimport { useState } from 'react';\nimport Data from './Data';\nimport './Forecast.css'\n\nrequire('dotenv').config();\n\nexport const Forecast = () => {\n  \n    let [responseObj, setResponseObj] = useState({});\n    let [cityName, setCityName] = useState('');\n  \n    function getForecast(e)\n    {\n      e.preventDefault();\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${process.env.REACT_APP_API_KEY}&units=imperial`)\n        .then(response => response.json())\n        .then (response => {\n          setResponseObj(response)\n        })\n        .catch(err => {\n          console.log(err)})\n    }\n  \n    return (\n        <div className=\"input-box\">\n          <form onSubmit={getForecast}>\n            <input\n              type=\"text\"\n              placeholder=\"...\"\n              value={cityName}\n              onChange={(e) => setCityName(e.target.value)}\n            />\n            <button type=\"submit\">\n              submit\n            </button>\n            <Data responseObj={responseObj}/>\n          </form>\n        </div>\n    )\n  }\n\n  export default Forecast;","import React from 'react';\nimport Forecast from './Forecast';\n\nrequire('dotenv').config();\n\nclass Weather extends React.Component {\n    state = {\n      loaded: false,\n    }\n    \n    componentDidMount() {\n      this.setState({loaded: true})\n    }\n  \n  \n    render(){\n      return (\n        <div>\n          <Forecast />\n        </div>\n      )\n    }\n  }\n\n  export default Weather;","import React from 'react';\nimport './App.css';\nimport Weather from './components/Weather';\n\nrequire('dotenv').config();\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <body>\n       <h1>Enter your city</h1>\n       <Weather />\n     </body>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrequire('dotenv').config();\n\nrender(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}